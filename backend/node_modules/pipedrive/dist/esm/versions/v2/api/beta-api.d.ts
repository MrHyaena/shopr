/**
 * Pipedrive API v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { AddActivityRequest } from '../models';
import { AddAdditionalDiscountRequestBody } from '../models';
import { AddAdditionalDiscountResponse } from '../models';
import { AddDealProductRequest } from '../models';
import { AddDealProductResponse } from '../models';
import { AddDealRequest } from '../models';
import { AddOrganizationRequest } from '../models';
import { AddPersonRequest } from '../models';
import { DeleteActivityResponse } from '../models';
import { DeleteAdditionalDiscountResponse } from '../models';
import { DeleteDealProductResponse } from '../models';
import { DeleteDealResponse } from '../models';
import { DeleteOrganizationResponse } from '../models';
import { DeletePersonResponse } from '../models';
import { GetActivitiesResponse } from '../models';
import { GetAdditionalDiscountsResponse } from '../models';
import { GetDealSearchResponse } from '../models';
import { GetDealsProductsResponse } from '../models';
import { GetDealsResponse } from '../models';
import { GetItemSearchFieldResponse } from '../models';
import { GetItemSearchResponse } from '../models';
import { GetLeadSearchResponse } from '../models';
import { GetOrganizationSearchResponse } from '../models';
import { GetOrganizationsResponse } from '../models';
import { GetPersonSearchResponse } from '../models';
import { GetPersonsResponse } from '../models';
import { UpdateAdditionalDiscountRequestBody } from '../models';
import { UpdateAdditionalDiscountResponse } from '../models';
import { UpdateDealProductRequest } from '../models';
import { UpdateDealRequest } from '../models';
import { UpdateOrganizationRequest } from '../models';
import { UpdatePersonRequest } from '../models';
import { UpsertActivityResponse } from '../models';
import { UpsertDealResponse } from '../models';
import { UpsertOrganizationResponse } from '../models';
import { UpsertPersonResponse } from '../models';
/**
 * BetaApi - axios parameter creator
 * @export
 */
export declare const BetaApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Adds a new activity.
     * @summary Add a new activity
     * @param {AddActivityRequest} [AddActivityRequest]

     * @throws {RequiredError}
     */
    addActivity: (AddActivityRequest?: AddActivityRequest) => Promise<RequestArgs>;
    /**
     * Adds a new deal.
     * @summary Add a new deal
     * @param {AddDealRequest} [AddDealRequest]

     * @throws {RequiredError}
     */
    addDeal: (AddDealRequest?: AddDealRequest) => Promise<RequestArgs>;
    /**
     * Adds a product to a deal, creating a new item called a deal-product.
     * @summary Add a product to a deal
     * @param {number} id The ID of the deal
     * @param {AddDealProductRequest} [AddDealProductRequest]

     * @throws {RequiredError}
     */
    addDealProduct: (id: number, AddDealProductRequest?: AddDealProductRequest) => Promise<RequestArgs>;
    /**
     * Adds a new organization.
     * @summary Add a new organization
     * @param {AddOrganizationRequest} [AddOrganizationRequest]

     * @throws {RequiredError}
     */
    addOrganization: (AddOrganizationRequest?: AddOrganizationRequest) => Promise<RequestArgs>;
    /**
     * Adds a new person.
     * @summary Add a new person
     * @param {AddPersonRequest} [AddPersonRequest]

     * @throws {RequiredError}
     */
    addPerson: (AddPersonRequest?: AddPersonRequest) => Promise<RequestArgs>;
    /**
     * Marks an activity as deleted. After 30 days, the activity will be permanently deleted.
     * @summary Delete an activity
     * @param {number} id The ID of the activity

     * @throws {RequiredError}
     */
    deleteActivity: (id: number) => Promise<RequestArgs>;
    /**
     * Removes a discount from a deal, changing the deal value if the deal has one-time products attached.
     * @summary Delete a discount from a deal
     * @param {number} id The ID of the deal
     * @param {number} discount_id The ID of the discount

     * @throws {RequiredError}
     */
    deleteAdditionalDiscount: (id: number, discount_id: number) => Promise<RequestArgs>;
    /**
     * Marks a deal as deleted. After 30 days, the deal will be permanently deleted.
     * @summary Delete a deal
     * @param {number} id The ID of the deal

     * @throws {RequiredError}
     */
    deleteDeal: (id: number) => Promise<RequestArgs>;
    /**
     * Deletes a product attachment from a deal, using the `product_attachment_id`.
     * @summary Delete an attached product from a deal
     * @param {number} id The ID of the deal
     * @param {number} product_attachment_id The product attachment ID

     * @throws {RequiredError}
     */
    deleteDealProduct: (id: number, product_attachment_id: number) => Promise<RequestArgs>;
    /**
     * Marks a organization as deleted. After 30 days, the organization will be permanently deleted.
     * @summary Delete a organization
     * @param {number} id The ID of the organization

     * @throws {RequiredError}
     */
    deleteOrganization: (id: number) => Promise<RequestArgs>;
    /**
     * Marks a person as deleted. After 30 days, the person will be permanently deleted.
     * @summary Delete a person
     * @param {number} id The ID of the person

     * @throws {RequiredError}
     */
    deletePerson: (id: number) => Promise<RequestArgs>;
    /**
     * Returns data about all activities.
     * @summary Get all activities
     * @param {number} [filter_id] If supplied, only activities matching the specified filter are returned
     * @param {string} [ids] Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @param {number} [owner_id] If supplied, only activities owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @param {string} [updated_since] If set, only activities with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {string} [updated_until] If set, only activities with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {'id' | 'update_time' | 'add_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @param {'attendees'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getActivities: (filter_id?: number, ids?: string, owner_id?: number, updated_since?: string, updated_until?: string, sort_by?: 'id' | 'update_time' | 'add_time', sort_direction?: 'asc' | 'desc', include_fields?: 'attendees', limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Returns the details of a specific activity.
     * @summary Get details of an activity
     * @param {number} id The ID of the activity
     * @param {'attendees'} [include_fields] Optional comma separated string array of additional fields to include

     * @throws {RequiredError}
     */
    getActivity: (id: number, include_fields?: 'attendees') => Promise<RequestArgs>;
    /**
     * Lists discounts attached to a deal.
     * @summary List discounts added to a deal
     * @param {number} id The ID of the deal

     * @throws {RequiredError}
     */
    getAdditionalDiscounts: (id: number) => Promise<RequestArgs>;
    /**
     * Returns the details of a specific deal.
     * @summary Get details of a deal
     * @param {number} id The ID of the deal
     * @param {'next_activity_id' | 'last_activity_id' | 'first_won_time' | 'products_count' | 'files_count' | 'notes_count' | 'followers_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'participants_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.

     * @throws {RequiredError}
     */
    getDeal: (id: number, include_fields?: 'next_activity_id' | 'last_activity_id' | 'first_won_time' | 'products_count' | 'files_count' | 'notes_count' | 'followers_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'participants_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time', custom_fields?: string) => Promise<RequestArgs>;
    /**
     * Lists products attached to a deal.
     * @summary List products attached to a deal
     * @param {number} id The ID of the deal
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {'id' | 'add_time' | 'update_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;add_time&#x60;, &#x60;update_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.

     * @throws {RequiredError}
     */
    getDealProducts: (id: number, cursor?: string, limit?: number, sort_by?: 'id' | 'add_time' | 'update_time', sort_direction?: 'asc' | 'desc') => Promise<RequestArgs>;
    /**
     * Returns data about all deals.
     * @summary Get all deals
     * @param {number} [filter_id] If supplied, only deals matching the specified filter are returned
     * @param {string} [ids] Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @param {number} [owner_id] If supplied, only deals owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @param {number} [person_id] If supplied, only deals linked to the specified person are returned. If filter_id is provided, this is ignored.
     * @param {number} [org_id] If supplied, only deals linked to the specified organization are returned. If filter_id is provided, this is ignored.
     * @param {number} [pipeline_id] If supplied, only deals in the specified pipeline are returned. If filter_id is provided, this is ignored.
     * @param {number} [stage_id] If supplied, only deals in the specified stage are returned. If filter_id is provided, this is ignored.
     * @param {'open' | 'won' | 'lost' | 'deleted'} [status] Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included. Multiple statuses can be included as a comma separated array. If filter_id is provided, this is ignored.
     * @param {string} [updated_since] If set, only deals with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {string} [updated_until] If set, only deals with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {'id' | 'update_time' | 'add_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @param {'next_activity_id' | 'last_activity_id' | 'first_won_time' | 'products_count' | 'files_count' | 'notes_count' | 'followers_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'participants_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getDeals: (filter_id?: number, ids?: string, owner_id?: number, person_id?: number, org_id?: number, pipeline_id?: number, stage_id?: number, status?: 'open' | 'won' | 'lost' | 'deleted', updated_since?: string, updated_until?: string, sort_by?: 'id' | 'update_time' | 'add_time', sort_direction?: 'asc' | 'desc', include_fields?: 'next_activity_id' | 'last_activity_id' | 'first_won_time' | 'products_count' | 'files_count' | 'notes_count' | 'followers_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'participants_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time', custom_fields?: string, limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Returns data about products attached to deals
     * @summary Get deal products of several deals
     * @param {Array<number>} deal_ids An array of integers with the IDs of the deals for which the attached products will be returned. A maximum of 100 deal IDs can be provided.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {'id' | 'deal_id' | 'add_time' | 'update_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;deal_id&#x60;, &#x60;add_time&#x60;, &#x60;update_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.

     * @throws {RequiredError}
     */
    getDealsProducts: (deal_ids: Array<number>, cursor?: string, limit?: number, sort_by?: 'id' | 'deal_id' | 'add_time' | 'update_time', sort_direction?: 'asc' | 'desc') => Promise<RequestArgs>;
    /**
     * Returns the details of a specific organization.
     * @summary Get details of a organization
     * @param {number} id The ID of the organization
     * @param {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.

     * @throws {RequiredError}
     */
    getOrganization: (id: number, include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count', custom_fields?: string) => Promise<RequestArgs>;
    /**
     * Returns data about all organizations.
     * @summary Get all organizations
     * @param {number} [filter_id] If supplied, only organizations matching the specified filter are returned
     * @param {string} [ids] Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @param {number} [owner_id] If supplied, only organization owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @param {string} [updated_since] If set, only organizations with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {string} [updated_until] If set, only organizations with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {'id' | 'update_time' | 'add_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @param {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getOrganizations: (filter_id?: number, ids?: string, owner_id?: number, updated_since?: string, updated_until?: string, sort_by?: 'id' | 'update_time' | 'add_time', sort_direction?: 'asc' | 'desc', include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count', custom_fields?: string, limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Returns the details of a specific person. Fields `ims`, `postal_address`, `notes`, `birthday`, and `job_title` are only included if contact sync is enabled for the company.
     * @summary Get details of a person
     * @param {number} id The ID of the person
     * @param {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'participant_open_deals_count' | 'participant_closed_deals_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time' | 'marketing_status' | 'doi_status'} [include_fields] Optional comma separated string array of additional fields to include. &#x60;marketing_status&#x60; and &#x60;doi_status&#x60; can only be included if the company has marketing app enabled.
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.

     * @throws {RequiredError}
     */
    getPerson: (id: number, include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'participant_open_deals_count' | 'participant_closed_deals_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time' | 'marketing_status' | 'doi_status', custom_fields?: string) => Promise<RequestArgs>;
    /**
     * Returns data about all persons. Fields `ims`, `postal_address`, `notes`, `birthday`, and `job_title` are only included if contact sync is enabled for the company.
     * @summary Get all persons
     * @param {number} [filter_id] If supplied, only persons matching the specified filter are returned
     * @param {string} [ids] Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @param {number} [owner_id] If supplied, only persons owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @param {number} [org_id] If supplied, only persons linked to the specified organization are returned. If filter_id is provided, this is ignored.
     * @param {string} [updated_since] If set, only persons with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {string} [updated_until] If set, only persons with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {'id' | 'update_time' | 'add_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @param {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'participant_open_deals_count' | 'participant_closed_deals_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time' | 'marketing_status' | 'doi_status'} [include_fields] Optional comma separated string array of additional fields to include. &#x60;marketing_status&#x60; and &#x60;doi_status&#x60; can only be included if the company has marketing app enabled.
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getPersons: (filter_id?: number, ids?: string, owner_id?: number, org_id?: number, updated_since?: string, updated_until?: string, sort_by?: 'id' | 'update_time' | 'add_time', sort_direction?: 'asc' | 'desc', include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'participant_open_deals_count' | 'participant_closed_deals_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time' | 'marketing_status' | 'doi_status', custom_fields?: string, limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Adds a discount to a deal changing, the deal value if the deal has one-time products attached.
     * @summary Add a discount to a deal
     * @param {number} id The ID of the deal
     * @param {AddAdditionalDiscountRequestBody} [AddAdditionalDiscountRequestBody]

     * @throws {RequiredError}
     */
    postAdditionalDiscount: (id: number, AddAdditionalDiscountRequestBody?: AddAdditionalDiscountRequestBody) => Promise<RequestArgs>;
    /**
     * Searches all deals by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found deals can be filtered by the person ID and the organization ID.
     * @summary Search deals
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'custom_fields' | 'notes' | 'title'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {number} [person_id] Will filter deals by the provided person ID. The upper limit of found deals associated with the person is 2000.
     * @param {number} [organization_id] Will filter deals by the provided organization ID. The upper limit of found deals associated with the organization is 2000.
     * @param {'open' | 'won' | 'lost'} [status] Will filter deals by the provided specific status. open &#x3D; Open, won &#x3D; Won, lost &#x3D; Lost. The upper limit of found deals associated with the status is 2000.
     * @param {'deal.cc_email'} [include_fields] Supports including optional fields in the results which are not provided by default
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchDeals: (term: string, fields?: 'custom_fields' | 'notes' | 'title', exact_match?: boolean, person_id?: number, organization_id?: number, status?: 'open' | 'won' | 'lost', include_fields?: 'deal.cc_email', limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Performs a search from your choice of item types and fields.
     * @summary Perform a search from multiple item types
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'deal' | 'person' | 'organization' | 'product' | 'lead' | 'file' | 'mail_attachment' | 'project'} [item_types] A comma-separated string array. The type of items to perform the search from. Defaults to all.
     * @param {'address' | 'code' | 'custom_fields' | 'email' | 'name' | 'notes' | 'organization_name' | 'person_name' | 'phone' | 'title' | 'description'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all. Relevant for each item type are:&lt;br&gt; &lt;table&gt; &lt;tr&gt;&lt;th&gt;&lt;b&gt;Item type&lt;/b&gt;&lt;/th&gt;&lt;th&gt;&lt;b&gt;Field&lt;/b&gt;&lt;/th&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Deal&lt;/td&gt;&lt;td&gt;&#x60;custom_fields&#x60;, &#x60;notes&#x60;, &#x60;title&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Person&lt;/td&gt;&lt;td&gt;&#x60;custom_fields&#x60;, &#x60;email&#x60;, &#x60;name&#x60;, &#x60;notes&#x60;, &#x60;phone&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Organization&lt;/td&gt;&lt;td&gt;&#x60;address&#x60;, &#x60;custom_fields&#x60;, &#x60;name&#x60;, &#x60;notes&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Product&lt;/td&gt;&lt;td&gt;&#x60;code&#x60;, &#x60;custom_fields&#x60;, &#x60;name&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Lead&lt;/td&gt;&lt;td&gt;&#x60;custom_fields&#x60;, &#x60;notes&#x60;, &#x60;email&#x60;, &#x60;organization_name&#x60;, &#x60;person_name&#x60;, &#x60;phone&#x60;, &#x60;title&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;File&lt;/td&gt;&lt;td&gt;&#x60;name&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Mail attachment&lt;/td&gt;&lt;td&gt;&#x60;name&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Project&lt;/td&gt;&lt;td&gt; &#x60;custom_fields&#x60;, &#x60;notes&#x60;, &#x60;title&#x60;, &#x60;description&#x60; &lt;/td&gt;&lt;/tr&gt; &lt;/table&gt; &lt;br&gt; Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.&lt;br/&gt; When searching for leads, the email, organization_name, person_name, and phone fields will return results only for leads not linked to contacts. For searching leads by person or organization values, please use &#x60;search_for_related_items&#x60;.
     * @param {boolean} [search_for_related_items] When enabled, the response will include up to 100 newest related leads and 100 newest related deals for each found person and organization and up to 100 newest related persons for each found organization
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {'deal.cc_email' | 'person.picture' | 'product.price'} [include_fields] A comma-separated string array. Supports including optional fields in the results which are not provided by default.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchItem: (term: string, item_types?: 'deal' | 'person' | 'organization' | 'product' | 'lead' | 'file' | 'mail_attachment' | 'project', fields?: 'address' | 'code' | 'custom_fields' | 'email' | 'name' | 'notes' | 'organization_name' | 'person_name' | 'phone' | 'title' | 'description', search_for_related_items?: boolean, exact_match?: boolean, include_fields?: 'deal.cc_email' | 'person.picture' | 'product.price', limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Performs a search from the values of a specific field. Results can either be the distinct values of the field (useful for searching autocomplete field values), or the IDs of actual items (deals, leads, persons, organizations or products).
     * @summary Perform a search using a specific field from an item type
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if &#x60;match&#x60; is &#x60;exact&#x60;). Please note that the search term has to be URL encoded.
     * @param {'deal' | 'lead' | 'person' | 'organization' | 'product' | 'project'} entity_type The type of the field to perform the search from
     * @param {string} field The key of the field to search from. The field key can be obtained by fetching the list of the fields using any of the fields\&#39; API GET methods (dealFields, personFields, etc.). Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @param {'exact' | 'beginning' | 'middle'} [match] The type of match used against the term. The search &lt;b&gt;is&lt;/b&gt; case sensitive.&lt;br/&gt;&lt;br/&gt; E.g. in case of searching for a value &#x60;monkey&#x60;, &lt;ul&gt; &lt;li&gt;with &#x60;exact&#x60; match, you will only find it if term is &#x60;monkey&#x60;&lt;/li&gt; &lt;li&gt;with &#x60;beginning&#x60; match, you will only find it if the term matches the beginning or the whole string, e.g. &#x60;monk&#x60; and &#x60;monkey&#x60;&lt;/li&gt; &lt;li&gt;with &#x60;middle&#x60; match, you will find the it if the term matches any substring of the value, e.g. &#x60;onk&#x60; and &#x60;ke&#x60;&lt;/li&gt; &lt;/ul&gt;.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchItemByField: (term: string, entity_type: 'deal' | 'lead' | 'person' | 'organization' | 'product' | 'project', field: string, match?: 'exact' | 'beginning' | 'middle', limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.
     * @summary Search leads
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'custom_fields' | 'notes' | 'title'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all of them.
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {number} [person_id] Will filter leads by the provided person ID. The upper limit of found leads associated with the person is 2000.
     * @param {number} [organization_id] Will filter leads by the provided organization ID. The upper limit of found leads associated with the organization is 2000.
     * @param {'lead.was_seen'} [include_fields] Supports including optional fields in the results which are not provided by default
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchLeads: (term: string, fields?: 'custom_fields' | 'notes' | 'title', exact_match?: boolean, person_id?: number, organization_id?: number, include_fields?: 'lead.was_seen', limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Searches all organizations by name, address, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope.
     * @summary Search organizations
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'address' | 'custom_fields' | 'notes' | 'name'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchOrganization: (term: string, fields?: 'address' | 'custom_fields' | 'notes' | 'name', exact_match?: boolean, limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Searches all persons by name, email, phone, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found persons can be filtered by organization ID.
     * @summary Search persons
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'custom_fields' | 'email' | 'notes' | 'phone' | 'name'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {number} [organization_id] Will filter persons by the provided organization ID. The upper limit of found persons associated with the organization is 2000.
     * @param {'person.picture'} [include_fields] Supports including optional fields in the results which are not provided by default
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchPersons: (term: string, fields?: 'custom_fields' | 'email' | 'notes' | 'phone' | 'name', exact_match?: boolean, organization_id?: number, include_fields?: 'person.picture', limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Updates the properties of an activity.
     * @summary Update an activity
     * @param {number} id The ID of the activity
     * @param {AddActivityRequest} [AddActivityRequest]

     * @throws {RequiredError}
     */
    updateActivity: (id: number, AddActivityRequest?: AddActivityRequest) => Promise<RequestArgs>;
    /**
     * Edits a discount added to a deal, changing the deal value if the deal has one-time products attached.
     * @summary Update a discount added to a deal
     * @param {number} id The ID of the deal
     * @param {number} discount_id The ID of the discount
     * @param {UpdateAdditionalDiscountRequestBody} [UpdateAdditionalDiscountRequestBody]

     * @throws {RequiredError}
     */
    updateAdditionalDiscount: (id: number, discount_id: number, UpdateAdditionalDiscountRequestBody?: UpdateAdditionalDiscountRequestBody) => Promise<RequestArgs>;
    /**
     * Updates the properties of a deal.
     * @summary Update a deal
     * @param {number} id The ID of the deal
     * @param {UpdateDealRequest} [UpdateDealRequest]

     * @throws {RequiredError}
     */
    updateDeal: (id: number, UpdateDealRequest?: UpdateDealRequest) => Promise<RequestArgs>;
    /**
     * Updates the details of the product that has been attached to a deal.
     * @summary Update the product attached to a deal
     * @param {number} id The ID of the deal
     * @param {number} product_attachment_id The ID of the deal-product (the ID of the product attached to the deal)
     * @param {UpdateDealProductRequest} [UpdateDealProductRequest]

     * @throws {RequiredError}
     */
    updateDealProduct: (id: number, product_attachment_id: number, UpdateDealProductRequest?: UpdateDealProductRequest) => Promise<RequestArgs>;
    /**
     * Updates the properties of a organization.
     * @summary Update a organization
     * @param {number} id The ID of the organization
     * @param {UpdateOrganizationRequest} [UpdateOrganizationRequest]

     * @throws {RequiredError}
     */
    updateOrganization: (id: number, UpdateOrganizationRequest?: UpdateOrganizationRequest) => Promise<RequestArgs>;
    /**
     * Updates the properties of a person.
     * @summary Update a person
     * @param {number} id The ID of the person
     * @param {UpdatePersonRequest} [UpdatePersonRequest]

     * @throws {RequiredError}
     */
    updatePerson: (id: number, UpdatePersonRequest?: UpdatePersonRequest) => Promise<RequestArgs>;
};
/**
 * BetaApi - functional programming interface
 * @export
 */
export declare const BetaApiFp: (configuration?: Configuration) => {
    /**
     * Adds a new activity.
     * @summary Add a new activity
     * @param {AddActivityRequest} [AddActivityRequest]

     * @throws {RequiredError}
     */
    addActivity(AddActivityRequest?: AddActivityRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertActivityResponse>>;
    /**
     * Adds a new deal.
     * @summary Add a new deal
     * @param {AddDealRequest} [AddDealRequest]

     * @throws {RequiredError}
     */
    addDeal(AddDealRequest?: AddDealRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertDealResponse>>;
    /**
     * Adds a product to a deal, creating a new item called a deal-product.
     * @summary Add a product to a deal
     * @param {number} id The ID of the deal
     * @param {AddDealProductRequest} [AddDealProductRequest]

     * @throws {RequiredError}
     */
    addDealProduct(id: number, AddDealProductRequest?: AddDealProductRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AddDealProductResponse>>;
    /**
     * Adds a new organization.
     * @summary Add a new organization
     * @param {AddOrganizationRequest} [AddOrganizationRequest]

     * @throws {RequiredError}
     */
    addOrganization(AddOrganizationRequest?: AddOrganizationRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertOrganizationResponse>>;
    /**
     * Adds a new person.
     * @summary Add a new person
     * @param {AddPersonRequest} [AddPersonRequest]

     * @throws {RequiredError}
     */
    addPerson(AddPersonRequest?: AddPersonRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertPersonResponse>>;
    /**
     * Marks an activity as deleted. After 30 days, the activity will be permanently deleted.
     * @summary Delete an activity
     * @param {number} id The ID of the activity

     * @throws {RequiredError}
     */
    deleteActivity(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeleteActivityResponse>>;
    /**
     * Removes a discount from a deal, changing the deal value if the deal has one-time products attached.
     * @summary Delete a discount from a deal
     * @param {number} id The ID of the deal
     * @param {number} discount_id The ID of the discount

     * @throws {RequiredError}
     */
    deleteAdditionalDiscount(id: number, discount_id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeleteAdditionalDiscountResponse>>;
    /**
     * Marks a deal as deleted. After 30 days, the deal will be permanently deleted.
     * @summary Delete a deal
     * @param {number} id The ID of the deal

     * @throws {RequiredError}
     */
    deleteDeal(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeleteDealResponse>>;
    /**
     * Deletes a product attachment from a deal, using the `product_attachment_id`.
     * @summary Delete an attached product from a deal
     * @param {number} id The ID of the deal
     * @param {number} product_attachment_id The product attachment ID

     * @throws {RequiredError}
     */
    deleteDealProduct(id: number, product_attachment_id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeleteDealProductResponse>>;
    /**
     * Marks a organization as deleted. After 30 days, the organization will be permanently deleted.
     * @summary Delete a organization
     * @param {number} id The ID of the organization

     * @throws {RequiredError}
     */
    deleteOrganization(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeleteOrganizationResponse>>;
    /**
     * Marks a person as deleted. After 30 days, the person will be permanently deleted.
     * @summary Delete a person
     * @param {number} id The ID of the person

     * @throws {RequiredError}
     */
    deletePerson(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeletePersonResponse>>;
    /**
     * Returns data about all activities.
     * @summary Get all activities
     * @param {number} [filter_id] If supplied, only activities matching the specified filter are returned
     * @param {string} [ids] Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @param {number} [owner_id] If supplied, only activities owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @param {string} [updated_since] If set, only activities with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {string} [updated_until] If set, only activities with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {'id' | 'update_time' | 'add_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @param {'attendees'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getActivities(filter_id?: number, ids?: string, owner_id?: number, updated_since?: string, updated_until?: string, sort_by?: 'id' | 'update_time' | 'add_time', sort_direction?: 'asc' | 'desc', include_fields?: 'attendees', limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetActivitiesResponse>>;
    /**
     * Returns the details of a specific activity.
     * @summary Get details of an activity
     * @param {number} id The ID of the activity
     * @param {'attendees'} [include_fields] Optional comma separated string array of additional fields to include

     * @throws {RequiredError}
     */
    getActivity(id: number, include_fields?: 'attendees'): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertActivityResponse>>;
    /**
     * Lists discounts attached to a deal.
     * @summary List discounts added to a deal
     * @param {number} id The ID of the deal

     * @throws {RequiredError}
     */
    getAdditionalDiscounts(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetAdditionalDiscountsResponse>>;
    /**
     * Returns the details of a specific deal.
     * @summary Get details of a deal
     * @param {number} id The ID of the deal
     * @param {'next_activity_id' | 'last_activity_id' | 'first_won_time' | 'products_count' | 'files_count' | 'notes_count' | 'followers_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'participants_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.

     * @throws {RequiredError}
     */
    getDeal(id: number, include_fields?: 'next_activity_id' | 'last_activity_id' | 'first_won_time' | 'products_count' | 'files_count' | 'notes_count' | 'followers_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'participants_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time', custom_fields?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertDealResponse>>;
    /**
     * Lists products attached to a deal.
     * @summary List products attached to a deal
     * @param {number} id The ID of the deal
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {'id' | 'add_time' | 'update_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;add_time&#x60;, &#x60;update_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.

     * @throws {RequiredError}
     */
    getDealProducts(id: number, cursor?: string, limit?: number, sort_by?: 'id' | 'add_time' | 'update_time', sort_direction?: 'asc' | 'desc'): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetDealsProductsResponse>>;
    /**
     * Returns data about all deals.
     * @summary Get all deals
     * @param {number} [filter_id] If supplied, only deals matching the specified filter are returned
     * @param {string} [ids] Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @param {number} [owner_id] If supplied, only deals owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @param {number} [person_id] If supplied, only deals linked to the specified person are returned. If filter_id is provided, this is ignored.
     * @param {number} [org_id] If supplied, only deals linked to the specified organization are returned. If filter_id is provided, this is ignored.
     * @param {number} [pipeline_id] If supplied, only deals in the specified pipeline are returned. If filter_id is provided, this is ignored.
     * @param {number} [stage_id] If supplied, only deals in the specified stage are returned. If filter_id is provided, this is ignored.
     * @param {'open' | 'won' | 'lost' | 'deleted'} [status] Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included. Multiple statuses can be included as a comma separated array. If filter_id is provided, this is ignored.
     * @param {string} [updated_since] If set, only deals with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {string} [updated_until] If set, only deals with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {'id' | 'update_time' | 'add_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @param {'next_activity_id' | 'last_activity_id' | 'first_won_time' | 'products_count' | 'files_count' | 'notes_count' | 'followers_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'participants_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getDeals(filter_id?: number, ids?: string, owner_id?: number, person_id?: number, org_id?: number, pipeline_id?: number, stage_id?: number, status?: 'open' | 'won' | 'lost' | 'deleted', updated_since?: string, updated_until?: string, sort_by?: 'id' | 'update_time' | 'add_time', sort_direction?: 'asc' | 'desc', include_fields?: 'next_activity_id' | 'last_activity_id' | 'first_won_time' | 'products_count' | 'files_count' | 'notes_count' | 'followers_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'participants_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time', custom_fields?: string, limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetDealsResponse>>;
    /**
     * Returns data about products attached to deals
     * @summary Get deal products of several deals
     * @param {Array<number>} deal_ids An array of integers with the IDs of the deals for which the attached products will be returned. A maximum of 100 deal IDs can be provided.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {'id' | 'deal_id' | 'add_time' | 'update_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;deal_id&#x60;, &#x60;add_time&#x60;, &#x60;update_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.

     * @throws {RequiredError}
     */
    getDealsProducts(deal_ids: Array<number>, cursor?: string, limit?: number, sort_by?: 'id' | 'deal_id' | 'add_time' | 'update_time', sort_direction?: 'asc' | 'desc'): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetDealsProductsResponse>>;
    /**
     * Returns the details of a specific organization.
     * @summary Get details of a organization
     * @param {number} id The ID of the organization
     * @param {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.

     * @throws {RequiredError}
     */
    getOrganization(id: number, include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count', custom_fields?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertOrganizationResponse>>;
    /**
     * Returns data about all organizations.
     * @summary Get all organizations
     * @param {number} [filter_id] If supplied, only organizations matching the specified filter are returned
     * @param {string} [ids] Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @param {number} [owner_id] If supplied, only organization owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @param {string} [updated_since] If set, only organizations with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {string} [updated_until] If set, only organizations with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {'id' | 'update_time' | 'add_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @param {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getOrganizations(filter_id?: number, ids?: string, owner_id?: number, updated_since?: string, updated_until?: string, sort_by?: 'id' | 'update_time' | 'add_time', sort_direction?: 'asc' | 'desc', include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count', custom_fields?: string, limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetOrganizationsResponse>>;
    /**
     * Returns the details of a specific person. Fields `ims`, `postal_address`, `notes`, `birthday`, and `job_title` are only included if contact sync is enabled for the company.
     * @summary Get details of a person
     * @param {number} id The ID of the person
     * @param {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'participant_open_deals_count' | 'participant_closed_deals_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time' | 'marketing_status' | 'doi_status'} [include_fields] Optional comma separated string array of additional fields to include. &#x60;marketing_status&#x60; and &#x60;doi_status&#x60; can only be included if the company has marketing app enabled.
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.

     * @throws {RequiredError}
     */
    getPerson(id: number, include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'participant_open_deals_count' | 'participant_closed_deals_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time' | 'marketing_status' | 'doi_status', custom_fields?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertPersonResponse>>;
    /**
     * Returns data about all persons. Fields `ims`, `postal_address`, `notes`, `birthday`, and `job_title` are only included if contact sync is enabled for the company.
     * @summary Get all persons
     * @param {number} [filter_id] If supplied, only persons matching the specified filter are returned
     * @param {string} [ids] Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @param {number} [owner_id] If supplied, only persons owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @param {number} [org_id] If supplied, only persons linked to the specified organization are returned. If filter_id is provided, this is ignored.
     * @param {string} [updated_since] If set, only persons with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {string} [updated_until] If set, only persons with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {'id' | 'update_time' | 'add_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @param {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'participant_open_deals_count' | 'participant_closed_deals_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time' | 'marketing_status' | 'doi_status'} [include_fields] Optional comma separated string array of additional fields to include. &#x60;marketing_status&#x60; and &#x60;doi_status&#x60; can only be included if the company has marketing app enabled.
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getPersons(filter_id?: number, ids?: string, owner_id?: number, org_id?: number, updated_since?: string, updated_until?: string, sort_by?: 'id' | 'update_time' | 'add_time', sort_direction?: 'asc' | 'desc', include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'participant_open_deals_count' | 'participant_closed_deals_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time' | 'marketing_status' | 'doi_status', custom_fields?: string, limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetPersonsResponse>>;
    /**
     * Adds a discount to a deal changing, the deal value if the deal has one-time products attached.
     * @summary Add a discount to a deal
     * @param {number} id The ID of the deal
     * @param {AddAdditionalDiscountRequestBody} [AddAdditionalDiscountRequestBody]

     * @throws {RequiredError}
     */
    postAdditionalDiscount(id: number, AddAdditionalDiscountRequestBody?: AddAdditionalDiscountRequestBody): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AddAdditionalDiscountResponse>>;
    /**
     * Searches all deals by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found deals can be filtered by the person ID and the organization ID.
     * @summary Search deals
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'custom_fields' | 'notes' | 'title'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {number} [person_id] Will filter deals by the provided person ID. The upper limit of found deals associated with the person is 2000.
     * @param {number} [organization_id] Will filter deals by the provided organization ID. The upper limit of found deals associated with the organization is 2000.
     * @param {'open' | 'won' | 'lost'} [status] Will filter deals by the provided specific status. open &#x3D; Open, won &#x3D; Won, lost &#x3D; Lost. The upper limit of found deals associated with the status is 2000.
     * @param {'deal.cc_email'} [include_fields] Supports including optional fields in the results which are not provided by default
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchDeals(term: string, fields?: 'custom_fields' | 'notes' | 'title', exact_match?: boolean, person_id?: number, organization_id?: number, status?: 'open' | 'won' | 'lost', include_fields?: 'deal.cc_email', limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetDealSearchResponse>>;
    /**
     * Performs a search from your choice of item types and fields.
     * @summary Perform a search from multiple item types
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'deal' | 'person' | 'organization' | 'product' | 'lead' | 'file' | 'mail_attachment' | 'project'} [item_types] A comma-separated string array. The type of items to perform the search from. Defaults to all.
     * @param {'address' | 'code' | 'custom_fields' | 'email' | 'name' | 'notes' | 'organization_name' | 'person_name' | 'phone' | 'title' | 'description'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all. Relevant for each item type are:&lt;br&gt; &lt;table&gt; &lt;tr&gt;&lt;th&gt;&lt;b&gt;Item type&lt;/b&gt;&lt;/th&gt;&lt;th&gt;&lt;b&gt;Field&lt;/b&gt;&lt;/th&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Deal&lt;/td&gt;&lt;td&gt;&#x60;custom_fields&#x60;, &#x60;notes&#x60;, &#x60;title&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Person&lt;/td&gt;&lt;td&gt;&#x60;custom_fields&#x60;, &#x60;email&#x60;, &#x60;name&#x60;, &#x60;notes&#x60;, &#x60;phone&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Organization&lt;/td&gt;&lt;td&gt;&#x60;address&#x60;, &#x60;custom_fields&#x60;, &#x60;name&#x60;, &#x60;notes&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Product&lt;/td&gt;&lt;td&gt;&#x60;code&#x60;, &#x60;custom_fields&#x60;, &#x60;name&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Lead&lt;/td&gt;&lt;td&gt;&#x60;custom_fields&#x60;, &#x60;notes&#x60;, &#x60;email&#x60;, &#x60;organization_name&#x60;, &#x60;person_name&#x60;, &#x60;phone&#x60;, &#x60;title&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;File&lt;/td&gt;&lt;td&gt;&#x60;name&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Mail attachment&lt;/td&gt;&lt;td&gt;&#x60;name&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Project&lt;/td&gt;&lt;td&gt; &#x60;custom_fields&#x60;, &#x60;notes&#x60;, &#x60;title&#x60;, &#x60;description&#x60; &lt;/td&gt;&lt;/tr&gt; &lt;/table&gt; &lt;br&gt; Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.&lt;br/&gt; When searching for leads, the email, organization_name, person_name, and phone fields will return results only for leads not linked to contacts. For searching leads by person or organization values, please use &#x60;search_for_related_items&#x60;.
     * @param {boolean} [search_for_related_items] When enabled, the response will include up to 100 newest related leads and 100 newest related deals for each found person and organization and up to 100 newest related persons for each found organization
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {'deal.cc_email' | 'person.picture' | 'product.price'} [include_fields] A comma-separated string array. Supports including optional fields in the results which are not provided by default.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchItem(term: string, item_types?: 'deal' | 'person' | 'organization' | 'product' | 'lead' | 'file' | 'mail_attachment' | 'project', fields?: 'address' | 'code' | 'custom_fields' | 'email' | 'name' | 'notes' | 'organization_name' | 'person_name' | 'phone' | 'title' | 'description', search_for_related_items?: boolean, exact_match?: boolean, include_fields?: 'deal.cc_email' | 'person.picture' | 'product.price', limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetItemSearchResponse>>;
    /**
     * Performs a search from the values of a specific field. Results can either be the distinct values of the field (useful for searching autocomplete field values), or the IDs of actual items (deals, leads, persons, organizations or products).
     * @summary Perform a search using a specific field from an item type
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if &#x60;match&#x60; is &#x60;exact&#x60;). Please note that the search term has to be URL encoded.
     * @param {'deal' | 'lead' | 'person' | 'organization' | 'product' | 'project'} entity_type The type of the field to perform the search from
     * @param {string} field The key of the field to search from. The field key can be obtained by fetching the list of the fields using any of the fields\&#39; API GET methods (dealFields, personFields, etc.). Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @param {'exact' | 'beginning' | 'middle'} [match] The type of match used against the term. The search &lt;b&gt;is&lt;/b&gt; case sensitive.&lt;br/&gt;&lt;br/&gt; E.g. in case of searching for a value &#x60;monkey&#x60;, &lt;ul&gt; &lt;li&gt;with &#x60;exact&#x60; match, you will only find it if term is &#x60;monkey&#x60;&lt;/li&gt; &lt;li&gt;with &#x60;beginning&#x60; match, you will only find it if the term matches the beginning or the whole string, e.g. &#x60;monk&#x60; and &#x60;monkey&#x60;&lt;/li&gt; &lt;li&gt;with &#x60;middle&#x60; match, you will find the it if the term matches any substring of the value, e.g. &#x60;onk&#x60; and &#x60;ke&#x60;&lt;/li&gt; &lt;/ul&gt;.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchItemByField(term: string, entity_type: 'deal' | 'lead' | 'person' | 'organization' | 'product' | 'project', field: string, match?: 'exact' | 'beginning' | 'middle', limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetItemSearchFieldResponse>>;
    /**
     * Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.
     * @summary Search leads
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'custom_fields' | 'notes' | 'title'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all of them.
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {number} [person_id] Will filter leads by the provided person ID. The upper limit of found leads associated with the person is 2000.
     * @param {number} [organization_id] Will filter leads by the provided organization ID. The upper limit of found leads associated with the organization is 2000.
     * @param {'lead.was_seen'} [include_fields] Supports including optional fields in the results which are not provided by default
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchLeads(term: string, fields?: 'custom_fields' | 'notes' | 'title', exact_match?: boolean, person_id?: number, organization_id?: number, include_fields?: 'lead.was_seen', limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetLeadSearchResponse>>;
    /**
     * Searches all organizations by name, address, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope.
     * @summary Search organizations
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'address' | 'custom_fields' | 'notes' | 'name'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchOrganization(term: string, fields?: 'address' | 'custom_fields' | 'notes' | 'name', exact_match?: boolean, limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetOrganizationSearchResponse>>;
    /**
     * Searches all persons by name, email, phone, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found persons can be filtered by organization ID.
     * @summary Search persons
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'custom_fields' | 'email' | 'notes' | 'phone' | 'name'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {number} [organization_id] Will filter persons by the provided organization ID. The upper limit of found persons associated with the organization is 2000.
     * @param {'person.picture'} [include_fields] Supports including optional fields in the results which are not provided by default
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchPersons(term: string, fields?: 'custom_fields' | 'email' | 'notes' | 'phone' | 'name', exact_match?: boolean, organization_id?: number, include_fields?: 'person.picture', limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetPersonSearchResponse>>;
    /**
     * Updates the properties of an activity.
     * @summary Update an activity
     * @param {number} id The ID of the activity
     * @param {AddActivityRequest} [AddActivityRequest]

     * @throws {RequiredError}
     */
    updateActivity(id: number, AddActivityRequest?: AddActivityRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertActivityResponse>>;
    /**
     * Edits a discount added to a deal, changing the deal value if the deal has one-time products attached.
     * @summary Update a discount added to a deal
     * @param {number} id The ID of the deal
     * @param {number} discount_id The ID of the discount
     * @param {UpdateAdditionalDiscountRequestBody} [UpdateAdditionalDiscountRequestBody]

     * @throws {RequiredError}
     */
    updateAdditionalDiscount(id: number, discount_id: number, UpdateAdditionalDiscountRequestBody?: UpdateAdditionalDiscountRequestBody): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpdateAdditionalDiscountResponse>>;
    /**
     * Updates the properties of a deal.
     * @summary Update a deal
     * @param {number} id The ID of the deal
     * @param {UpdateDealRequest} [UpdateDealRequest]

     * @throws {RequiredError}
     */
    updateDeal(id: number, UpdateDealRequest?: UpdateDealRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertDealResponse>>;
    /**
     * Updates the details of the product that has been attached to a deal.
     * @summary Update the product attached to a deal
     * @param {number} id The ID of the deal
     * @param {number} product_attachment_id The ID of the deal-product (the ID of the product attached to the deal)
     * @param {UpdateDealProductRequest} [UpdateDealProductRequest]

     * @throws {RequiredError}
     */
    updateDealProduct(id: number, product_attachment_id: number, UpdateDealProductRequest?: UpdateDealProductRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AddDealProductResponse>>;
    /**
     * Updates the properties of a organization.
     * @summary Update a organization
     * @param {number} id The ID of the organization
     * @param {UpdateOrganizationRequest} [UpdateOrganizationRequest]

     * @throws {RequiredError}
     */
    updateOrganization(id: number, UpdateOrganizationRequest?: UpdateOrganizationRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertOrganizationResponse>>;
    /**
     * Updates the properties of a person.
     * @summary Update a person
     * @param {number} id The ID of the person
     * @param {UpdatePersonRequest} [UpdatePersonRequest]

     * @throws {RequiredError}
     */
    updatePerson(id: number, UpdatePersonRequest?: UpdatePersonRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertPersonResponse>>;
};
/**
 * BetaApi - factory interface
 * @export
 */
export declare const BetaApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Adds a new activity.
     * @summary Add a new activity
     * @param {BetaApiAddActivityRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    addActivity(requestParameters?: BetaApiAddActivityRequest): Promise<UpsertActivityResponse>;
    /**
     * Adds a new deal.
     * @summary Add a new deal
     * @param {BetaApiAddDealRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    addDeal(requestParameters?: BetaApiAddDealRequest): Promise<UpsertDealResponse>;
    /**
     * Adds a product to a deal, creating a new item called a deal-product.
     * @summary Add a product to a deal
     * @param {BetaApiAddDealProductRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    addDealProduct(requestParameters: BetaApiAddDealProductRequest): Promise<AddDealProductResponse>;
    /**
     * Adds a new organization.
     * @summary Add a new organization
     * @param {BetaApiAddOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    addOrganization(requestParameters?: BetaApiAddOrganizationRequest): Promise<UpsertOrganizationResponse>;
    /**
     * Adds a new person.
     * @summary Add a new person
     * @param {BetaApiAddPersonRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    addPerson(requestParameters?: BetaApiAddPersonRequest): Promise<UpsertPersonResponse>;
    /**
     * Marks an activity as deleted. After 30 days, the activity will be permanently deleted.
     * @summary Delete an activity
     * @param {BetaApiDeleteActivityRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deleteActivity(requestParameters: BetaApiDeleteActivityRequest): Promise<DeleteActivityResponse>;
    /**
     * Removes a discount from a deal, changing the deal value if the deal has one-time products attached.
     * @summary Delete a discount from a deal
     * @param {BetaApiDeleteAdditionalDiscountRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deleteAdditionalDiscount(requestParameters: BetaApiDeleteAdditionalDiscountRequest): Promise<DeleteAdditionalDiscountResponse>;
    /**
     * Marks a deal as deleted. After 30 days, the deal will be permanently deleted.
     * @summary Delete a deal
     * @param {BetaApiDeleteDealRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deleteDeal(requestParameters: BetaApiDeleteDealRequest): Promise<DeleteDealResponse>;
    /**
     * Deletes a product attachment from a deal, using the `product_attachment_id`.
     * @summary Delete an attached product from a deal
     * @param {BetaApiDeleteDealProductRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deleteDealProduct(requestParameters: BetaApiDeleteDealProductRequest): Promise<DeleteDealProductResponse>;
    /**
     * Marks a organization as deleted. After 30 days, the organization will be permanently deleted.
     * @summary Delete a organization
     * @param {BetaApiDeleteOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deleteOrganization(requestParameters: BetaApiDeleteOrganizationRequest): Promise<DeleteOrganizationResponse>;
    /**
     * Marks a person as deleted. After 30 days, the person will be permanently deleted.
     * @summary Delete a person
     * @param {BetaApiDeletePersonRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deletePerson(requestParameters: BetaApiDeletePersonRequest): Promise<DeletePersonResponse>;
    /**
     * Returns data about all activities.
     * @summary Get all activities
     * @param {BetaApiGetActivitiesRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getActivities(requestParameters?: BetaApiGetActivitiesRequest): Promise<GetActivitiesResponse>;
    /**
     * Returns the details of a specific activity.
     * @summary Get details of an activity
     * @param {BetaApiGetActivityRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getActivity(requestParameters: BetaApiGetActivityRequest): Promise<UpsertActivityResponse>;
    /**
     * Lists discounts attached to a deal.
     * @summary List discounts added to a deal
     * @param {BetaApiGetAdditionalDiscountsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getAdditionalDiscounts(requestParameters: BetaApiGetAdditionalDiscountsRequest): Promise<GetAdditionalDiscountsResponse>;
    /**
     * Returns the details of a specific deal.
     * @summary Get details of a deal
     * @param {BetaApiGetDealRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getDeal(requestParameters: BetaApiGetDealRequest): Promise<UpsertDealResponse>;
    /**
     * Lists products attached to a deal.
     * @summary List products attached to a deal
     * @param {BetaApiGetDealProductsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getDealProducts(requestParameters: BetaApiGetDealProductsRequest): Promise<GetDealsProductsResponse>;
    /**
     * Returns data about all deals.
     * @summary Get all deals
     * @param {BetaApiGetDealsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getDeals(requestParameters?: BetaApiGetDealsRequest): Promise<GetDealsResponse>;
    /**
     * Returns data about products attached to deals
     * @summary Get deal products of several deals
     * @param {BetaApiGetDealsProductsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getDealsProducts(requestParameters: BetaApiGetDealsProductsRequest): Promise<GetDealsProductsResponse>;
    /**
     * Returns the details of a specific organization.
     * @summary Get details of a organization
     * @param {BetaApiGetOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getOrganization(requestParameters: BetaApiGetOrganizationRequest): Promise<UpsertOrganizationResponse>;
    /**
     * Returns data about all organizations.
     * @summary Get all organizations
     * @param {BetaApiGetOrganizationsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getOrganizations(requestParameters?: BetaApiGetOrganizationsRequest): Promise<GetOrganizationsResponse>;
    /**
     * Returns the details of a specific person. Fields `ims`, `postal_address`, `notes`, `birthday`, and `job_title` are only included if contact sync is enabled for the company.
     * @summary Get details of a person
     * @param {BetaApiGetPersonRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getPerson(requestParameters: BetaApiGetPersonRequest): Promise<UpsertPersonResponse>;
    /**
     * Returns data about all persons. Fields `ims`, `postal_address`, `notes`, `birthday`, and `job_title` are only included if contact sync is enabled for the company.
     * @summary Get all persons
     * @param {BetaApiGetPersonsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getPersons(requestParameters?: BetaApiGetPersonsRequest): Promise<GetPersonsResponse>;
    /**
     * Adds a discount to a deal changing, the deal value if the deal has one-time products attached.
     * @summary Add a discount to a deal
     * @param {BetaApiPostAdditionalDiscountRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    postAdditionalDiscount(requestParameters: BetaApiPostAdditionalDiscountRequest): Promise<AddAdditionalDiscountResponse>;
    /**
     * Searches all deals by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found deals can be filtered by the person ID and the organization ID.
     * @summary Search deals
     * @param {BetaApiSearchDealsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    searchDeals(requestParameters: BetaApiSearchDealsRequest): Promise<GetDealSearchResponse>;
    /**
     * Performs a search from your choice of item types and fields.
     * @summary Perform a search from multiple item types
     * @param {BetaApiSearchItemRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    searchItem(requestParameters: BetaApiSearchItemRequest): Promise<GetItemSearchResponse>;
    /**
     * Performs a search from the values of a specific field. Results can either be the distinct values of the field (useful for searching autocomplete field values), or the IDs of actual items (deals, leads, persons, organizations or products).
     * @summary Perform a search using a specific field from an item type
     * @param {BetaApiSearchItemByFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    searchItemByField(requestParameters: BetaApiSearchItemByFieldRequest): Promise<GetItemSearchFieldResponse>;
    /**
     * Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.
     * @summary Search leads
     * @param {BetaApiSearchLeadsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    searchLeads(requestParameters: BetaApiSearchLeadsRequest): Promise<GetLeadSearchResponse>;
    /**
     * Searches all organizations by name, address, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope.
     * @summary Search organizations
     * @param {BetaApiSearchOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    searchOrganization(requestParameters: BetaApiSearchOrganizationRequest): Promise<GetOrganizationSearchResponse>;
    /**
     * Searches all persons by name, email, phone, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found persons can be filtered by organization ID.
     * @summary Search persons
     * @param {BetaApiSearchPersonsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    searchPersons(requestParameters: BetaApiSearchPersonsRequest): Promise<GetPersonSearchResponse>;
    /**
     * Updates the properties of an activity.
     * @summary Update an activity
     * @param {BetaApiUpdateActivityRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    updateActivity(requestParameters: BetaApiUpdateActivityRequest): Promise<UpsertActivityResponse>;
    /**
     * Edits a discount added to a deal, changing the deal value if the deal has one-time products attached.
     * @summary Update a discount added to a deal
     * @param {BetaApiUpdateAdditionalDiscountRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    updateAdditionalDiscount(requestParameters: BetaApiUpdateAdditionalDiscountRequest): Promise<UpdateAdditionalDiscountResponse>;
    /**
     * Updates the properties of a deal.
     * @summary Update a deal
     * @param {BetaApiUpdateDealRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    updateDeal(requestParameters: BetaApiUpdateDealRequest): Promise<UpsertDealResponse>;
    /**
     * Updates the details of the product that has been attached to a deal.
     * @summary Update the product attached to a deal
     * @param {BetaApiUpdateDealProductRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    updateDealProduct(requestParameters: BetaApiUpdateDealProductRequest): Promise<AddDealProductResponse>;
    /**
     * Updates the properties of a organization.
     * @summary Update a organization
     * @param {BetaApiUpdateOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    updateOrganization(requestParameters: BetaApiUpdateOrganizationRequest): Promise<UpsertOrganizationResponse>;
    /**
     * Updates the properties of a person.
     * @summary Update a person
     * @param {BetaApiUpdatePersonRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    updatePerson(requestParameters: BetaApiUpdatePersonRequest): Promise<UpsertPersonResponse>;
};
/**
 * Request parameters for addActivity operation in BetaApi.
 * @export
 * @interface BetaApiAddActivityRequest
 */
export interface BetaApiAddActivityRequest {
    /**
     *
     * @type {AddActivityRequest}
     * @memberof BetaApiAddActivity
     */
    readonly AddActivityRequest?: AddActivityRequest;
}
/**
 * Request parameters for addDeal operation in BetaApi.
 * @export
 * @interface BetaApiAddDealRequest
 */
export interface BetaApiAddDealRequest {
    /**
     *
     * @type {AddDealRequest}
     * @memberof BetaApiAddDeal
     */
    readonly AddDealRequest?: AddDealRequest;
}
/**
 * Request parameters for addDealProduct operation in BetaApi.
 * @export
 * @interface BetaApiAddDealProductRequest
 */
export interface BetaApiAddDealProductRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiAddDealProduct
     */
    readonly id: number;
    /**
     *
     * @type {AddDealProductRequest}
     * @memberof BetaApiAddDealProduct
     */
    readonly AddDealProductRequest?: AddDealProductRequest;
}
/**
 * Request parameters for addOrganization operation in BetaApi.
 * @export
 * @interface BetaApiAddOrganizationRequest
 */
export interface BetaApiAddOrganizationRequest {
    /**
     *
     * @type {AddOrganizationRequest}
     * @memberof BetaApiAddOrganization
     */
    readonly AddOrganizationRequest?: AddOrganizationRequest;
}
/**
 * Request parameters for addPerson operation in BetaApi.
 * @export
 * @interface BetaApiAddPersonRequest
 */
export interface BetaApiAddPersonRequest {
    /**
     *
     * @type {AddPersonRequest}
     * @memberof BetaApiAddPerson
     */
    readonly AddPersonRequest?: AddPersonRequest;
}
/**
 * Request parameters for deleteActivity operation in BetaApi.
 * @export
 * @interface BetaApiDeleteActivityRequest
 */
export interface BetaApiDeleteActivityRequest {
    /**
     * The ID of the activity
     * @type {number}
     * @memberof BetaApiDeleteActivity
     */
    readonly id: number;
}
/**
 * Request parameters for deleteAdditionalDiscount operation in BetaApi.
 * @export
 * @interface BetaApiDeleteAdditionalDiscountRequest
 */
export interface BetaApiDeleteAdditionalDiscountRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiDeleteAdditionalDiscount
     */
    readonly id: number;
    /**
     * The ID of the discount
     * @type {number}
     * @memberof BetaApiDeleteAdditionalDiscount
     */
    readonly discount_id: number;
}
/**
 * Request parameters for deleteDeal operation in BetaApi.
 * @export
 * @interface BetaApiDeleteDealRequest
 */
export interface BetaApiDeleteDealRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiDeleteDeal
     */
    readonly id: number;
}
/**
 * Request parameters for deleteDealProduct operation in BetaApi.
 * @export
 * @interface BetaApiDeleteDealProductRequest
 */
export interface BetaApiDeleteDealProductRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiDeleteDealProduct
     */
    readonly id: number;
    /**
     * The product attachment ID
     * @type {number}
     * @memberof BetaApiDeleteDealProduct
     */
    readonly product_attachment_id: number;
}
/**
 * Request parameters for deleteOrganization operation in BetaApi.
 * @export
 * @interface BetaApiDeleteOrganizationRequest
 */
export interface BetaApiDeleteOrganizationRequest {
    /**
     * The ID of the organization
     * @type {number}
     * @memberof BetaApiDeleteOrganization
     */
    readonly id: number;
}
/**
 * Request parameters for deletePerson operation in BetaApi.
 * @export
 * @interface BetaApiDeletePersonRequest
 */
export interface BetaApiDeletePersonRequest {
    /**
     * The ID of the person
     * @type {number}
     * @memberof BetaApiDeletePerson
     */
    readonly id: number;
}
/**
 * Request parameters for getActivities operation in BetaApi.
 * @export
 * @interface BetaApiGetActivitiesRequest
 */
export interface BetaApiGetActivitiesRequest {
    /**
     * If supplied, only activities matching the specified filter are returned
     * @type {number}
     * @memberof BetaApiGetActivities
     */
    readonly filter_id?: number;
    /**
     * Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @type {string}
     * @memberof BetaApiGetActivities
     */
    readonly ids?: string;
    /**
     * If supplied, only activities owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @type {number}
     * @memberof BetaApiGetActivities
     */
    readonly owner_id?: number;
    /**
     * If set, only activities with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @type {string}
     * @memberof BetaApiGetActivities
     */
    readonly updated_since?: string;
    /**
     * If set, only activities with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @type {string}
     * @memberof BetaApiGetActivities
     */
    readonly updated_until?: string;
    /**
     * The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @type {'id' | 'update_time' | 'add_time'}
     * @memberof BetaApiGetActivities
     */
    readonly sort_by?: 'id' | 'update_time' | 'add_time';
    /**
     * The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @type {'asc' | 'desc'}
     * @memberof BetaApiGetActivities
     */
    readonly sort_direction?: 'asc' | 'desc';
    /**
     * Optional comma separated string array of additional fields to include
     * @type {'attendees'}
     * @memberof BetaApiGetActivities
     */
    readonly include_fields?: 'attendees';
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof BetaApiGetActivities
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof BetaApiGetActivities
     */
    readonly cursor?: string;
}
/**
 * Request parameters for getActivity operation in BetaApi.
 * @export
 * @interface BetaApiGetActivityRequest
 */
export interface BetaApiGetActivityRequest {
    /**
     * The ID of the activity
     * @type {number}
     * @memberof BetaApiGetActivity
     */
    readonly id: number;
    /**
     * Optional comma separated string array of additional fields to include
     * @type {'attendees'}
     * @memberof BetaApiGetActivity
     */
    readonly include_fields?: 'attendees';
}
/**
 * Request parameters for getAdditionalDiscounts operation in BetaApi.
 * @export
 * @interface BetaApiGetAdditionalDiscountsRequest
 */
export interface BetaApiGetAdditionalDiscountsRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiGetAdditionalDiscounts
     */
    readonly id: number;
}
/**
 * Request parameters for getDeal operation in BetaApi.
 * @export
 * @interface BetaApiGetDealRequest
 */
export interface BetaApiGetDealRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiGetDeal
     */
    readonly id: number;
    /**
     * Optional comma separated string array of additional fields to include
     * @type {'next_activity_id' | 'last_activity_id' | 'first_won_time' | 'products_count' | 'files_count' | 'notes_count' | 'followers_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'participants_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time'}
     * @memberof BetaApiGetDeal
     */
    readonly include_fields?: 'next_activity_id' | 'last_activity_id' | 'first_won_time' | 'products_count' | 'files_count' | 'notes_count' | 'followers_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'participants_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time';
    /**
     * Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @type {string}
     * @memberof BetaApiGetDeal
     */
    readonly custom_fields?: string;
}
/**
 * Request parameters for getDealProducts operation in BetaApi.
 * @export
 * @interface BetaApiGetDealProductsRequest
 */
export interface BetaApiGetDealProductsRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiGetDealProducts
     */
    readonly id: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof BetaApiGetDealProducts
     */
    readonly cursor?: string;
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof BetaApiGetDealProducts
     */
    readonly limit?: number;
    /**
     * The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;add_time&#x60;, &#x60;update_time&#x60;.
     * @type {'id' | 'add_time' | 'update_time'}
     * @memberof BetaApiGetDealProducts
     */
    readonly sort_by?: 'id' | 'add_time' | 'update_time';
    /**
     * The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @type {'asc' | 'desc'}
     * @memberof BetaApiGetDealProducts
     */
    readonly sort_direction?: 'asc' | 'desc';
}
/**
 * Request parameters for getDeals operation in BetaApi.
 * @export
 * @interface BetaApiGetDealsRequest
 */
export interface BetaApiGetDealsRequest {
    /**
     * If supplied, only deals matching the specified filter are returned
     * @type {number}
     * @memberof BetaApiGetDeals
     */
    readonly filter_id?: number;
    /**
     * Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @type {string}
     * @memberof BetaApiGetDeals
     */
    readonly ids?: string;
    /**
     * If supplied, only deals owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @type {number}
     * @memberof BetaApiGetDeals
     */
    readonly owner_id?: number;
    /**
     * If supplied, only deals linked to the specified person are returned. If filter_id is provided, this is ignored.
     * @type {number}
     * @memberof BetaApiGetDeals
     */
    readonly person_id?: number;
    /**
     * If supplied, only deals linked to the specified organization are returned. If filter_id is provided, this is ignored.
     * @type {number}
     * @memberof BetaApiGetDeals
     */
    readonly org_id?: number;
    /**
     * If supplied, only deals in the specified pipeline are returned. If filter_id is provided, this is ignored.
     * @type {number}
     * @memberof BetaApiGetDeals
     */
    readonly pipeline_id?: number;
    /**
     * If supplied, only deals in the specified stage are returned. If filter_id is provided, this is ignored.
     * @type {number}
     * @memberof BetaApiGetDeals
     */
    readonly stage_id?: number;
    /**
     * Only fetch deals with a specific status. If omitted, all not deleted deals are returned. If set to deleted, deals that have been deleted up to 30 days ago will be included. Multiple statuses can be included as a comma separated array. If filter_id is provided, this is ignored.
     * @type {'open' | 'won' | 'lost' | 'deleted'}
     * @memberof BetaApiGetDeals
     */
    readonly status?: 'open' | 'won' | 'lost' | 'deleted';
    /**
     * If set, only deals with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @type {string}
     * @memberof BetaApiGetDeals
     */
    readonly updated_since?: string;
    /**
     * If set, only deals with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @type {string}
     * @memberof BetaApiGetDeals
     */
    readonly updated_until?: string;
    /**
     * The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @type {'id' | 'update_time' | 'add_time'}
     * @memberof BetaApiGetDeals
     */
    readonly sort_by?: 'id' | 'update_time' | 'add_time';
    /**
     * The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @type {'asc' | 'desc'}
     * @memberof BetaApiGetDeals
     */
    readonly sort_direction?: 'asc' | 'desc';
    /**
     * Optional comma separated string array of additional fields to include
     * @type {'next_activity_id' | 'last_activity_id' | 'first_won_time' | 'products_count' | 'files_count' | 'notes_count' | 'followers_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'participants_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time'}
     * @memberof BetaApiGetDeals
     */
    readonly include_fields?: 'next_activity_id' | 'last_activity_id' | 'first_won_time' | 'products_count' | 'files_count' | 'notes_count' | 'followers_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'participants_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time';
    /**
     * Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @type {string}
     * @memberof BetaApiGetDeals
     */
    readonly custom_fields?: string;
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof BetaApiGetDeals
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof BetaApiGetDeals
     */
    readonly cursor?: string;
}
/**
 * Request parameters for getDealsProducts operation in BetaApi.
 * @export
 * @interface BetaApiGetDealsProductsRequest
 */
export interface BetaApiGetDealsProductsRequest {
    /**
     * An array of integers with the IDs of the deals for which the attached products will be returned. A maximum of 100 deal IDs can be provided.
     * @type {Array<number>}
     * @memberof BetaApiGetDealsProducts
     */
    readonly deal_ids: Array<number>;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof BetaApiGetDealsProducts
     */
    readonly cursor?: string;
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof BetaApiGetDealsProducts
     */
    readonly limit?: number;
    /**
     * The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;deal_id&#x60;, &#x60;add_time&#x60;, &#x60;update_time&#x60;.
     * @type {'id' | 'deal_id' | 'add_time' | 'update_time'}
     * @memberof BetaApiGetDealsProducts
     */
    readonly sort_by?: 'id' | 'deal_id' | 'add_time' | 'update_time';
    /**
     * The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @type {'asc' | 'desc'}
     * @memberof BetaApiGetDealsProducts
     */
    readonly sort_direction?: 'asc' | 'desc';
}
/**
 * Request parameters for getOrganization operation in BetaApi.
 * @export
 * @interface BetaApiGetOrganizationRequest
 */
export interface BetaApiGetOrganizationRequest {
    /**
     * The ID of the organization
     * @type {number}
     * @memberof BetaApiGetOrganization
     */
    readonly id: number;
    /**
     * Optional comma separated string array of additional fields to include
     * @type {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count'}
     * @memberof BetaApiGetOrganization
     */
    readonly include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count';
    /**
     * Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @type {string}
     * @memberof BetaApiGetOrganization
     */
    readonly custom_fields?: string;
}
/**
 * Request parameters for getOrganizations operation in BetaApi.
 * @export
 * @interface BetaApiGetOrganizationsRequest
 */
export interface BetaApiGetOrganizationsRequest {
    /**
     * If supplied, only organizations matching the specified filter are returned
     * @type {number}
     * @memberof BetaApiGetOrganizations
     */
    readonly filter_id?: number;
    /**
     * Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @type {string}
     * @memberof BetaApiGetOrganizations
     */
    readonly ids?: string;
    /**
     * If supplied, only organization owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @type {number}
     * @memberof BetaApiGetOrganizations
     */
    readonly owner_id?: number;
    /**
     * If set, only organizations with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @type {string}
     * @memberof BetaApiGetOrganizations
     */
    readonly updated_since?: string;
    /**
     * If set, only organizations with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @type {string}
     * @memberof BetaApiGetOrganizations
     */
    readonly updated_until?: string;
    /**
     * The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @type {'id' | 'update_time' | 'add_time'}
     * @memberof BetaApiGetOrganizations
     */
    readonly sort_by?: 'id' | 'update_time' | 'add_time';
    /**
     * The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @type {'asc' | 'desc'}
     * @memberof BetaApiGetOrganizations
     */
    readonly sort_direction?: 'asc' | 'desc';
    /**
     * Optional comma separated string array of additional fields to include
     * @type {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count'}
     * @memberof BetaApiGetOrganizations
     */
    readonly include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count';
    /**
     * Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @type {string}
     * @memberof BetaApiGetOrganizations
     */
    readonly custom_fields?: string;
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof BetaApiGetOrganizations
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof BetaApiGetOrganizations
     */
    readonly cursor?: string;
}
/**
 * Request parameters for getPerson operation in BetaApi.
 * @export
 * @interface BetaApiGetPersonRequest
 */
export interface BetaApiGetPersonRequest {
    /**
     * The ID of the person
     * @type {number}
     * @memberof BetaApiGetPerson
     */
    readonly id: number;
    /**
     * Optional comma separated string array of additional fields to include. &#x60;marketing_status&#x60; and &#x60;doi_status&#x60; can only be included if the company has marketing app enabled.
     * @type {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'participant_open_deals_count' | 'participant_closed_deals_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time' | 'marketing_status' | 'doi_status'}
     * @memberof BetaApiGetPerson
     */
    readonly include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'participant_open_deals_count' | 'participant_closed_deals_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time' | 'marketing_status' | 'doi_status';
    /**
     * Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @type {string}
     * @memberof BetaApiGetPerson
     */
    readonly custom_fields?: string;
}
/**
 * Request parameters for getPersons operation in BetaApi.
 * @export
 * @interface BetaApiGetPersonsRequest
 */
export interface BetaApiGetPersonsRequest {
    /**
     * If supplied, only persons matching the specified filter are returned
     * @type {number}
     * @memberof BetaApiGetPersons
     */
    readonly filter_id?: number;
    /**
     * Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @type {string}
     * @memberof BetaApiGetPersons
     */
    readonly ids?: string;
    /**
     * If supplied, only persons owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @type {number}
     * @memberof BetaApiGetPersons
     */
    readonly owner_id?: number;
    /**
     * If supplied, only persons linked to the specified organization are returned. If filter_id is provided, this is ignored.
     * @type {number}
     * @memberof BetaApiGetPersons
     */
    readonly org_id?: number;
    /**
     * If set, only persons with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @type {string}
     * @memberof BetaApiGetPersons
     */
    readonly updated_since?: string;
    /**
     * If set, only persons with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @type {string}
     * @memberof BetaApiGetPersons
     */
    readonly updated_until?: string;
    /**
     * The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @type {'id' | 'update_time' | 'add_time'}
     * @memberof BetaApiGetPersons
     */
    readonly sort_by?: 'id' | 'update_time' | 'add_time';
    /**
     * The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @type {'asc' | 'desc'}
     * @memberof BetaApiGetPersons
     */
    readonly sort_direction?: 'asc' | 'desc';
    /**
     * Optional comma separated string array of additional fields to include. &#x60;marketing_status&#x60; and &#x60;doi_status&#x60; can only be included if the company has marketing app enabled.
     * @type {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'participant_open_deals_count' | 'participant_closed_deals_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time' | 'marketing_status' | 'doi_status'}
     * @memberof BetaApiGetPersons
     */
    readonly include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'participant_open_deals_count' | 'participant_closed_deals_count' | 'email_messages_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count' | 'last_incoming_mail_time' | 'last_outgoing_mail_time' | 'marketing_status' | 'doi_status';
    /**
     * Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @type {string}
     * @memberof BetaApiGetPersons
     */
    readonly custom_fields?: string;
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof BetaApiGetPersons
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof BetaApiGetPersons
     */
    readonly cursor?: string;
}
/**
 * Request parameters for postAdditionalDiscount operation in BetaApi.
 * @export
 * @interface BetaApiPostAdditionalDiscountRequest
 */
export interface BetaApiPostAdditionalDiscountRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiPostAdditionalDiscount
     */
    readonly id: number;
    /**
     *
     * @type {AddAdditionalDiscountRequestBody}
     * @memberof BetaApiPostAdditionalDiscount
     */
    readonly AddAdditionalDiscountRequestBody?: AddAdditionalDiscountRequestBody;
}
/**
 * Request parameters for searchDeals operation in BetaApi.
 * @export
 * @interface BetaApiSearchDealsRequest
 */
export interface BetaApiSearchDealsRequest {
    /**
     * The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @type {string}
     * @memberof BetaApiSearchDeals
     */
    readonly term: string;
    /**
     * A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @type {'custom_fields' | 'notes' | 'title'}
     * @memberof BetaApiSearchDeals
     */
    readonly fields?: 'custom_fields' | 'notes' | 'title';
    /**
     * When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @type {boolean}
     * @memberof BetaApiSearchDeals
     */
    readonly exact_match?: boolean;
    /**
     * Will filter deals by the provided person ID. The upper limit of found deals associated with the person is 2000.
     * @type {number}
     * @memberof BetaApiSearchDeals
     */
    readonly person_id?: number;
    /**
     * Will filter deals by the provided organization ID. The upper limit of found deals associated with the organization is 2000.
     * @type {number}
     * @memberof BetaApiSearchDeals
     */
    readonly organization_id?: number;
    /**
     * Will filter deals by the provided specific status. open &#x3D; Open, won &#x3D; Won, lost &#x3D; Lost. The upper limit of found deals associated with the status is 2000.
     * @type {'open' | 'won' | 'lost'}
     * @memberof BetaApiSearchDeals
     */
    readonly status?: 'open' | 'won' | 'lost';
    /**
     * Supports including optional fields in the results which are not provided by default
     * @type {'deal.cc_email'}
     * @memberof BetaApiSearchDeals
     */
    readonly include_fields?: 'deal.cc_email';
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof BetaApiSearchDeals
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof BetaApiSearchDeals
     */
    readonly cursor?: string;
}
/**
 * Request parameters for searchItem operation in BetaApi.
 * @export
 * @interface BetaApiSearchItemRequest
 */
export interface BetaApiSearchItemRequest {
    /**
     * The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @type {string}
     * @memberof BetaApiSearchItem
     */
    readonly term: string;
    /**
     * A comma-separated string array. The type of items to perform the search from. Defaults to all.
     * @type {'deal' | 'person' | 'organization' | 'product' | 'lead' | 'file' | 'mail_attachment' | 'project'}
     * @memberof BetaApiSearchItem
     */
    readonly item_types?: 'deal' | 'person' | 'organization' | 'product' | 'lead' | 'file' | 'mail_attachment' | 'project';
    /**
     * A comma-separated string array. The fields to perform the search from. Defaults to all. Relevant for each item type are:&lt;br&gt; &lt;table&gt; &lt;tr&gt;&lt;th&gt;&lt;b&gt;Item type&lt;/b&gt;&lt;/th&gt;&lt;th&gt;&lt;b&gt;Field&lt;/b&gt;&lt;/th&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Deal&lt;/td&gt;&lt;td&gt;&#x60;custom_fields&#x60;, &#x60;notes&#x60;, &#x60;title&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Person&lt;/td&gt;&lt;td&gt;&#x60;custom_fields&#x60;, &#x60;email&#x60;, &#x60;name&#x60;, &#x60;notes&#x60;, &#x60;phone&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Organization&lt;/td&gt;&lt;td&gt;&#x60;address&#x60;, &#x60;custom_fields&#x60;, &#x60;name&#x60;, &#x60;notes&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Product&lt;/td&gt;&lt;td&gt;&#x60;code&#x60;, &#x60;custom_fields&#x60;, &#x60;name&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Lead&lt;/td&gt;&lt;td&gt;&#x60;custom_fields&#x60;, &#x60;notes&#x60;, &#x60;email&#x60;, &#x60;organization_name&#x60;, &#x60;person_name&#x60;, &#x60;phone&#x60;, &#x60;title&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;File&lt;/td&gt;&lt;td&gt;&#x60;name&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Mail attachment&lt;/td&gt;&lt;td&gt;&#x60;name&#x60;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Project&lt;/td&gt;&lt;td&gt; &#x60;custom_fields&#x60;, &#x60;notes&#x60;, &#x60;title&#x60;, &#x60;description&#x60; &lt;/td&gt;&lt;/tr&gt; &lt;/table&gt; &lt;br&gt; Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.&lt;br/&gt; When searching for leads, the email, organization_name, person_name, and phone fields will return results only for leads not linked to contacts. For searching leads by person or organization values, please use &#x60;search_for_related_items&#x60;.
     * @type {'address' | 'code' | 'custom_fields' | 'email' | 'name' | 'notes' | 'organization_name' | 'person_name' | 'phone' | 'title' | 'description'}
     * @memberof BetaApiSearchItem
     */
    readonly fields?: 'address' | 'code' | 'custom_fields' | 'email' | 'name' | 'notes' | 'organization_name' | 'person_name' | 'phone' | 'title' | 'description';
    /**
     * When enabled, the response will include up to 100 newest related leads and 100 newest related deals for each found person and organization and up to 100 newest related persons for each found organization
     * @type {boolean}
     * @memberof BetaApiSearchItem
     */
    readonly search_for_related_items?: boolean;
    /**
     * When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @type {boolean}
     * @memberof BetaApiSearchItem
     */
    readonly exact_match?: boolean;
    /**
     * A comma-separated string array. Supports including optional fields in the results which are not provided by default.
     * @type {'deal.cc_email' | 'person.picture' | 'product.price'}
     * @memberof BetaApiSearchItem
     */
    readonly include_fields?: 'deal.cc_email' | 'person.picture' | 'product.price';
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof BetaApiSearchItem
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof BetaApiSearchItem
     */
    readonly cursor?: string;
}
/**
 * Request parameters for searchItemByField operation in BetaApi.
 * @export
 * @interface BetaApiSearchItemByFieldRequest
 */
export interface BetaApiSearchItemByFieldRequest {
    /**
     * The search term to look for. Minimum 2 characters (or 1 if &#x60;match&#x60; is &#x60;exact&#x60;). Please note that the search term has to be URL encoded.
     * @type {string}
     * @memberof BetaApiSearchItemByField
     */
    readonly term: string;
    /**
     * The type of the field to perform the search from
     * @type {'deal' | 'lead' | 'person' | 'organization' | 'product' | 'project'}
     * @memberof BetaApiSearchItemByField
     */
    readonly entity_type: 'deal' | 'lead' | 'person' | 'organization' | 'product' | 'project';
    /**
     * The key of the field to search from. The field key can be obtained by fetching the list of the fields using any of the fields\&#39; API GET methods (dealFields, personFields, etc.). Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @type {string}
     * @memberof BetaApiSearchItemByField
     */
    readonly field: string;
    /**
     * The type of match used against the term. The search &lt;b&gt;is&lt;/b&gt; case sensitive.&lt;br/&gt;&lt;br/&gt; E.g. in case of searching for a value &#x60;monkey&#x60;, &lt;ul&gt; &lt;li&gt;with &#x60;exact&#x60; match, you will only find it if term is &#x60;monkey&#x60;&lt;/li&gt; &lt;li&gt;with &#x60;beginning&#x60; match, you will only find it if the term matches the beginning or the whole string, e.g. &#x60;monk&#x60; and &#x60;monkey&#x60;&lt;/li&gt; &lt;li&gt;with &#x60;middle&#x60; match, you will find the it if the term matches any substring of the value, e.g. &#x60;onk&#x60; and &#x60;ke&#x60;&lt;/li&gt; &lt;/ul&gt;.
     * @type {'exact' | 'beginning' | 'middle'}
     * @memberof BetaApiSearchItemByField
     */
    readonly match?: 'exact' | 'beginning' | 'middle';
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof BetaApiSearchItemByField
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof BetaApiSearchItemByField
     */
    readonly cursor?: string;
}
/**
 * Request parameters for searchLeads operation in BetaApi.
 * @export
 * @interface BetaApiSearchLeadsRequest
 */
export interface BetaApiSearchLeadsRequest {
    /**
     * The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @type {string}
     * @memberof BetaApiSearchLeads
     */
    readonly term: string;
    /**
     * A comma-separated string array. The fields to perform the search from. Defaults to all of them.
     * @type {'custom_fields' | 'notes' | 'title'}
     * @memberof BetaApiSearchLeads
     */
    readonly fields?: 'custom_fields' | 'notes' | 'title';
    /**
     * When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @type {boolean}
     * @memberof BetaApiSearchLeads
     */
    readonly exact_match?: boolean;
    /**
     * Will filter leads by the provided person ID. The upper limit of found leads associated with the person is 2000.
     * @type {number}
     * @memberof BetaApiSearchLeads
     */
    readonly person_id?: number;
    /**
     * Will filter leads by the provided organization ID. The upper limit of found leads associated with the organization is 2000.
     * @type {number}
     * @memberof BetaApiSearchLeads
     */
    readonly organization_id?: number;
    /**
     * Supports including optional fields in the results which are not provided by default
     * @type {'lead.was_seen'}
     * @memberof BetaApiSearchLeads
     */
    readonly include_fields?: 'lead.was_seen';
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof BetaApiSearchLeads
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof BetaApiSearchLeads
     */
    readonly cursor?: string;
}
/**
 * Request parameters for searchOrganization operation in BetaApi.
 * @export
 * @interface BetaApiSearchOrganizationRequest
 */
export interface BetaApiSearchOrganizationRequest {
    /**
     * The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @type {string}
     * @memberof BetaApiSearchOrganization
     */
    readonly term: string;
    /**
     * A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @type {'address' | 'custom_fields' | 'notes' | 'name'}
     * @memberof BetaApiSearchOrganization
     */
    readonly fields?: 'address' | 'custom_fields' | 'notes' | 'name';
    /**
     * When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @type {boolean}
     * @memberof BetaApiSearchOrganization
     */
    readonly exact_match?: boolean;
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof BetaApiSearchOrganization
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof BetaApiSearchOrganization
     */
    readonly cursor?: string;
}
/**
 * Request parameters for searchPersons operation in BetaApi.
 * @export
 * @interface BetaApiSearchPersonsRequest
 */
export interface BetaApiSearchPersonsRequest {
    /**
     * The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @type {string}
     * @memberof BetaApiSearchPersons
     */
    readonly term: string;
    /**
     * A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @type {'custom_fields' | 'email' | 'notes' | 'phone' | 'name'}
     * @memberof BetaApiSearchPersons
     */
    readonly fields?: 'custom_fields' | 'email' | 'notes' | 'phone' | 'name';
    /**
     * When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @type {boolean}
     * @memberof BetaApiSearchPersons
     */
    readonly exact_match?: boolean;
    /**
     * Will filter persons by the provided organization ID. The upper limit of found persons associated with the organization is 2000.
     * @type {number}
     * @memberof BetaApiSearchPersons
     */
    readonly organization_id?: number;
    /**
     * Supports including optional fields in the results which are not provided by default
     * @type {'person.picture'}
     * @memberof BetaApiSearchPersons
     */
    readonly include_fields?: 'person.picture';
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof BetaApiSearchPersons
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof BetaApiSearchPersons
     */
    readonly cursor?: string;
}
/**
 * Request parameters for updateActivity operation in BetaApi.
 * @export
 * @interface BetaApiUpdateActivityRequest
 */
export interface BetaApiUpdateActivityRequest {
    /**
     * The ID of the activity
     * @type {number}
     * @memberof BetaApiUpdateActivity
     */
    readonly id: number;
    /**
     *
     * @type {AddActivityRequest}
     * @memberof BetaApiUpdateActivity
     */
    readonly AddActivityRequest?: AddActivityRequest;
}
/**
 * Request parameters for updateAdditionalDiscount operation in BetaApi.
 * @export
 * @interface BetaApiUpdateAdditionalDiscountRequest
 */
export interface BetaApiUpdateAdditionalDiscountRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiUpdateAdditionalDiscount
     */
    readonly id: number;
    /**
     * The ID of the discount
     * @type {number}
     * @memberof BetaApiUpdateAdditionalDiscount
     */
    readonly discount_id: number;
    /**
     *
     * @type {UpdateAdditionalDiscountRequestBody}
     * @memberof BetaApiUpdateAdditionalDiscount
     */
    readonly UpdateAdditionalDiscountRequestBody?: UpdateAdditionalDiscountRequestBody;
}
/**
 * Request parameters for updateDeal operation in BetaApi.
 * @export
 * @interface BetaApiUpdateDealRequest
 */
export interface BetaApiUpdateDealRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiUpdateDeal
     */
    readonly id: number;
    /**
     *
     * @type {UpdateDealRequest}
     * @memberof BetaApiUpdateDeal
     */
    readonly UpdateDealRequest?: UpdateDealRequest;
}
/**
 * Request parameters for updateDealProduct operation in BetaApi.
 * @export
 * @interface BetaApiUpdateDealProductRequest
 */
export interface BetaApiUpdateDealProductRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiUpdateDealProduct
     */
    readonly id: number;
    /**
     * The ID of the deal-product (the ID of the product attached to the deal)
     * @type {number}
     * @memberof BetaApiUpdateDealProduct
     */
    readonly product_attachment_id: number;
    /**
     *
     * @type {UpdateDealProductRequest}
     * @memberof BetaApiUpdateDealProduct
     */
    readonly UpdateDealProductRequest?: UpdateDealProductRequest;
}
/**
 * Request parameters for updateOrganization operation in BetaApi.
 * @export
 * @interface BetaApiUpdateOrganizationRequest
 */
export interface BetaApiUpdateOrganizationRequest {
    /**
     * The ID of the organization
     * @type {number}
     * @memberof BetaApiUpdateOrganization
     */
    readonly id: number;
    /**
     *
     * @type {UpdateOrganizationRequest}
     * @memberof BetaApiUpdateOrganization
     */
    readonly UpdateOrganizationRequest?: UpdateOrganizationRequest;
}
/**
 * Request parameters for updatePerson operation in BetaApi.
 * @export
 * @interface BetaApiUpdatePersonRequest
 */
export interface BetaApiUpdatePersonRequest {
    /**
     * The ID of the person
     * @type {number}
     * @memberof BetaApiUpdatePerson
     */
    readonly id: number;
    /**
     *
     * @type {UpdatePersonRequest}
     * @memberof BetaApiUpdatePerson
     */
    readonly UpdatePersonRequest?: UpdatePersonRequest;
}
/**
 * BetaApi - object-oriented interface
 * @export
 * @class BetaApi
 * @extends {BaseAPI}
 */
export declare class BetaApi extends BaseAPI {
    /**
     * Adds a new activity.
     * @summary Add a new activity
     * @param {BetaApiAddActivityRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    addActivity(requestParameters?: BetaApiAddActivityRequest): Promise<UpsertActivityResponse>;
    /**
     * Adds a new deal.
     * @summary Add a new deal
     * @param {BetaApiAddDealRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    addDeal(requestParameters?: BetaApiAddDealRequest): Promise<UpsertDealResponse>;
    /**
     * Adds a product to a deal, creating a new item called a deal-product.
     * @summary Add a product to a deal
     * @param {BetaApiAddDealProductRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    addDealProduct(requestParameters: BetaApiAddDealProductRequest): Promise<AddDealProductResponse>;
    /**
     * Adds a new organization.
     * @summary Add a new organization
     * @param {BetaApiAddOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    addOrganization(requestParameters?: BetaApiAddOrganizationRequest): Promise<UpsertOrganizationResponse>;
    /**
     * Adds a new person.
     * @summary Add a new person
     * @param {BetaApiAddPersonRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    addPerson(requestParameters?: BetaApiAddPersonRequest): Promise<UpsertPersonResponse>;
    /**
     * Marks an activity as deleted. After 30 days, the activity will be permanently deleted.
     * @summary Delete an activity
     * @param {BetaApiDeleteActivityRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    deleteActivity(requestParameters: BetaApiDeleteActivityRequest): Promise<DeleteActivityResponse>;
    /**
     * Removes a discount from a deal, changing the deal value if the deal has one-time products attached.
     * @summary Delete a discount from a deal
     * @param {BetaApiDeleteAdditionalDiscountRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    deleteAdditionalDiscount(requestParameters: BetaApiDeleteAdditionalDiscountRequest): Promise<DeleteAdditionalDiscountResponse>;
    /**
     * Marks a deal as deleted. After 30 days, the deal will be permanently deleted.
     * @summary Delete a deal
     * @param {BetaApiDeleteDealRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    deleteDeal(requestParameters: BetaApiDeleteDealRequest): Promise<DeleteDealResponse>;
    /**
     * Deletes a product attachment from a deal, using the `product_attachment_id`.
     * @summary Delete an attached product from a deal
     * @param {BetaApiDeleteDealProductRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    deleteDealProduct(requestParameters: BetaApiDeleteDealProductRequest): Promise<DeleteDealProductResponse>;
    /**
     * Marks a organization as deleted. After 30 days, the organization will be permanently deleted.
     * @summary Delete a organization
     * @param {BetaApiDeleteOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    deleteOrganization(requestParameters: BetaApiDeleteOrganizationRequest): Promise<DeleteOrganizationResponse>;
    /**
     * Marks a person as deleted. After 30 days, the person will be permanently deleted.
     * @summary Delete a person
     * @param {BetaApiDeletePersonRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    deletePerson(requestParameters: BetaApiDeletePersonRequest): Promise<DeletePersonResponse>;
    /**
     * Returns data about all activities.
     * @summary Get all activities
     * @param {BetaApiGetActivitiesRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    getActivities(requestParameters?: BetaApiGetActivitiesRequest): Promise<GetActivitiesResponse>;
    /**
     * Returns the details of a specific activity.
     * @summary Get details of an activity
     * @param {BetaApiGetActivityRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    getActivity(requestParameters: BetaApiGetActivityRequest): Promise<UpsertActivityResponse>;
    /**
     * Lists discounts attached to a deal.
     * @summary List discounts added to a deal
     * @param {BetaApiGetAdditionalDiscountsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    getAdditionalDiscounts(requestParameters: BetaApiGetAdditionalDiscountsRequest): Promise<GetAdditionalDiscountsResponse>;
    /**
     * Returns the details of a specific deal.
     * @summary Get details of a deal
     * @param {BetaApiGetDealRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    getDeal(requestParameters: BetaApiGetDealRequest): Promise<UpsertDealResponse>;
    /**
     * Lists products attached to a deal.
     * @summary List products attached to a deal
     * @param {BetaApiGetDealProductsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    getDealProducts(requestParameters: BetaApiGetDealProductsRequest): Promise<GetDealsProductsResponse>;
    /**
     * Returns data about all deals.
     * @summary Get all deals
     * @param {BetaApiGetDealsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    getDeals(requestParameters?: BetaApiGetDealsRequest): Promise<GetDealsResponse>;
    /**
     * Returns data about products attached to deals
     * @summary Get deal products of several deals
     * @param {BetaApiGetDealsProductsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    getDealsProducts(requestParameters: BetaApiGetDealsProductsRequest): Promise<GetDealsProductsResponse>;
    /**
     * Returns the details of a specific organization.
     * @summary Get details of a organization
     * @param {BetaApiGetOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    getOrganization(requestParameters: BetaApiGetOrganizationRequest): Promise<UpsertOrganizationResponse>;
    /**
     * Returns data about all organizations.
     * @summary Get all organizations
     * @param {BetaApiGetOrganizationsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    getOrganizations(requestParameters?: BetaApiGetOrganizationsRequest): Promise<GetOrganizationsResponse>;
    /**
     * Returns the details of a specific person. Fields `ims`, `postal_address`, `notes`, `birthday`, and `job_title` are only included if contact sync is enabled for the company.
     * @summary Get details of a person
     * @param {BetaApiGetPersonRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    getPerson(requestParameters: BetaApiGetPersonRequest): Promise<UpsertPersonResponse>;
    /**
     * Returns data about all persons. Fields `ims`, `postal_address`, `notes`, `birthday`, and `job_title` are only included if contact sync is enabled for the company.
     * @summary Get all persons
     * @param {BetaApiGetPersonsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    getPersons(requestParameters?: BetaApiGetPersonsRequest): Promise<GetPersonsResponse>;
    /**
     * Adds a discount to a deal changing, the deal value if the deal has one-time products attached.
     * @summary Add a discount to a deal
     * @param {BetaApiPostAdditionalDiscountRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    postAdditionalDiscount(requestParameters: BetaApiPostAdditionalDiscountRequest): Promise<AddAdditionalDiscountResponse>;
    /**
     * Searches all deals by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found deals can be filtered by the person ID and the organization ID.
     * @summary Search deals
     * @param {BetaApiSearchDealsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    searchDeals(requestParameters: BetaApiSearchDealsRequest): Promise<GetDealSearchResponse>;
    /**
     * Performs a search from your choice of item types and fields.
     * @summary Perform a search from multiple item types
     * @param {BetaApiSearchItemRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    searchItem(requestParameters: BetaApiSearchItemRequest): Promise<GetItemSearchResponse>;
    /**
     * Performs a search from the values of a specific field. Results can either be the distinct values of the field (useful for searching autocomplete field values), or the IDs of actual items (deals, leads, persons, organizations or products).
     * @summary Perform a search using a specific field from an item type
     * @param {BetaApiSearchItemByFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    searchItemByField(requestParameters: BetaApiSearchItemByFieldRequest): Promise<GetItemSearchFieldResponse>;
    /**
     * Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.
     * @summary Search leads
     * @param {BetaApiSearchLeadsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    searchLeads(requestParameters: BetaApiSearchLeadsRequest): Promise<GetLeadSearchResponse>;
    /**
     * Searches all organizations by name, address, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope.
     * @summary Search organizations
     * @param {BetaApiSearchOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    searchOrganization(requestParameters: BetaApiSearchOrganizationRequest): Promise<GetOrganizationSearchResponse>;
    /**
     * Searches all persons by name, email, phone, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found persons can be filtered by organization ID.
     * @summary Search persons
     * @param {BetaApiSearchPersonsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    searchPersons(requestParameters: BetaApiSearchPersonsRequest): Promise<GetPersonSearchResponse>;
    /**
     * Updates the properties of an activity.
     * @summary Update an activity
     * @param {BetaApiUpdateActivityRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    updateActivity(requestParameters: BetaApiUpdateActivityRequest): Promise<UpsertActivityResponse>;
    /**
     * Edits a discount added to a deal, changing the deal value if the deal has one-time products attached.
     * @summary Update a discount added to a deal
     * @param {BetaApiUpdateAdditionalDiscountRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    updateAdditionalDiscount(requestParameters: BetaApiUpdateAdditionalDiscountRequest): Promise<UpdateAdditionalDiscountResponse>;
    /**
     * Updates the properties of a deal.
     * @summary Update a deal
     * @param {BetaApiUpdateDealRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    updateDeal(requestParameters: BetaApiUpdateDealRequest): Promise<UpsertDealResponse>;
    /**
     * Updates the details of the product that has been attached to a deal.
     * @summary Update the product attached to a deal
     * @param {BetaApiUpdateDealProductRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    updateDealProduct(requestParameters: BetaApiUpdateDealProductRequest): Promise<AddDealProductResponse>;
    /**
     * Updates the properties of a organization.
     * @summary Update a organization
     * @param {BetaApiUpdateOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    updateOrganization(requestParameters: BetaApiUpdateOrganizationRequest): Promise<UpsertOrganizationResponse>;
    /**
     * Updates the properties of a person.
     * @summary Update a person
     * @param {BetaApiUpdatePersonRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    updatePerson(requestParameters: BetaApiUpdatePersonRequest): Promise<UpsertPersonResponse>;
}
